<apex:component controller="AutoComplete_Con" selfClosing="true">
    <apex:attribute name="SObject" description="SOQL Object to query" type="String" assignTo="{!sObjVal}" required="true"/>
    <apex:attribute name="labelField" description="API Name of Field to display for label" type="String" required="true"/>
    <apex:attribute name="valueField" description="API Name of Field to display for value that is passed to the targetField" type="String" required="true"/>
    <apex:attribute name="targetField" assignTo="{!targetField}" description="Field of current object that will hold the selection." type="Object"/>
    <!--Required js files-->
    <apex:includeScript value="{!URLFOR($Resource.jQuery_BlogForce9_162, 'js/jquery-1.6.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.jQuery_BlogForce9_162, 'js/jquery-ui-1.8.16.custom.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jQuery_BlogForce9_162, 'css/ui-lightness/jquery-ui-1.8.16.custom.css')}"/>
    <script>
    
        /*
        *check if jquery is loaded if not load jquery again
        **/
       if(typeof jQuery != 'undefined'){
           $j =jQuery.noConflict();
       }
       $j(function(){
            $j( ".auto{!randomJsIden}" ).autocomplete({
                source: function(request, response) {
                   queryData{!randomJsIden}(response ,request.term);
                },
                minLength: 0,
                select: function(event, ui) {
                                    //pass the selected value to hidden input field
                                    $j('.hiddenField{!randomJsIden}').val(ui.item.value);                              
                                    $j(this).val(ui.item.label);
                                   
                                    return false;
                                },
                focus: function( event, ui ) {
                        $j(this).val( ui.item.label );
                        return false;  
                }
            });
                   
        });
        
         /*
        *This method queries data according to the passed parameter
        *and populates the combobox accordingly
        ***/    
        function queryData{!randomJsIden}(response,param){
           Visualforce.remoting.Manager.invokeAction(
                     '{!$RemoteAction.AutoComplete_Con.getData}','{!sObjVal}','{!labelField}','{!valueField}',param,
                     function(result, event){
                         //if success
                         if(event.status){ 
                            var data = [];  
                            $j.each(result,function(){
                                 var obj = new Object();
                                 for (var field in this) { 
                                     //match the passed label and returned value to populate the label and value                                  
                                     if((field.toUpperCase()=='{!labelField }'.toUpperCase())){
                                         obj.label = this[field];                                                                               
                                     }
                                     else if((field.toUpperCase()=='{!valueField}'.toUpperCase())){
                                         obj.value= this[field];                                                                               
                                     }                                    
                                }                                
                                 data.push(obj);
                             });
                             //return the dataa
                             response( data);
                         }
                         else{
                              alert('Invalid Field/Object API Name : '+event.message);
                         }
                         
                     }, 
                      {escape: true}
                );
            }     
    </script>
    <style>
        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
        }
    </style>
    <apex:inputText styleClass="auto{!randomJsIden}"/>
    <apex:actionFunction name="refreshPanel{!randomJsIden}" reRender="hiddenPanel"/> 
    <apex:outputPanel id="hiddenPanel">
        <apex:actionRegion >
            <apex:inputText value="{!targetField}" id="hiddenField" styleClass="hiddenField{!randomJsIden}" style="display:none"/>
        </apex:actionRegion>
    </apex:outputPanel>
</apex:component>